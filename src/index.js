/**
 * Merge Ticketing API
 * The unified API for building rich integrations with multiple Ticketing platforms.
 *
 * The version of the OpenAPI document: 1.0
 * Contact: hello@merge.dev
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from './ApiClient';
import Account from './model/Account';
import AccountDetails from './model/AccountDetails';
import AccountDetailsAndActions from './model/AccountDetailsAndActions';
import AccountDetailsAndActionsIntegration from './model/AccountDetailsAndActionsIntegration';
import AccountDetailsAndActionsStatusEnum from './model/AccountDetailsAndActionsStatusEnum';
import AccountIntegration from './model/AccountIntegration';
import AccountToken from './model/AccountToken';
import Attachment from './model/Attachment';
import AttachmentRequest from './model/AttachmentRequest';
import AvailableActions from './model/AvailableActions';
import CategoriesEnum from './model/CategoriesEnum';
import CategoryEnum from './model/CategoryEnum';
import Comment from './model/Comment';
import CommentEndpointRequest from './model/CommentEndpointRequest';
import CommentRequest from './model/CommentRequest';
import CommentResponse from './model/CommentResponse';
import Contact from './model/Contact';
import DataPassthroughRequest from './model/DataPassthroughRequest';
import DebugModeLog from './model/DebugModeLog';
import DebugModelLogSummary from './model/DebugModelLogSummary';
import EncodingEnum from './model/EncodingEnum';
import EndUserDetailsRequest from './model/EndUserDetailsRequest';
import ErrorValidationProblem from './model/ErrorValidationProblem';
import GenerateRemoteKeyRequest from './model/GenerateRemoteKeyRequest';
import Issue from './model/Issue';
import IssueStatusEnum from './model/IssueStatusEnum';
import LinkToken from './model/LinkToken';
import LinkedAccountStatus from './model/LinkedAccountStatus';
import MetaResponse from './model/MetaResponse';
import MethodEnum from './model/MethodEnum';
import ModelOperation from './model/ModelOperation';
import MultipartFormFieldRequest from './model/MultipartFormFieldRequest';
import PaginatedAccountDetailsAndActionsList from './model/PaginatedAccountDetailsAndActionsList';
import PaginatedAccountList from './model/PaginatedAccountList';
import PaginatedAttachmentList from './model/PaginatedAttachmentList';
import PaginatedCommentList from './model/PaginatedCommentList';
import PaginatedContactList from './model/PaginatedContactList';
import PaginatedIssueList from './model/PaginatedIssueList';
import PaginatedProjectList from './model/PaginatedProjectList';
import PaginatedSyncStatusList from './model/PaginatedSyncStatusList';
import PaginatedTagList from './model/PaginatedTagList';
import PaginatedTeamList from './model/PaginatedTeamList';
import PaginatedTicketList from './model/PaginatedTicketList';
import PaginatedUserList from './model/PaginatedUserList';
import Project from './model/Project';
import RemoteData from './model/RemoteData';
import RemoteKey from './model/RemoteKey';
import RemoteKeyForRegenerationRequest from './model/RemoteKeyForRegenerationRequest';
import RemoteResponse from './model/RemoteResponse';
import RequestFormatEnum from './model/RequestFormatEnum';
import SyncStatus from './model/SyncStatus';
import SyncStatusStatusEnum from './model/SyncStatusStatusEnum';
import Tag from './model/Tag';
import Team from './model/Team';
import Ticket from './model/Ticket';
import TicketEndpointRequest from './model/TicketEndpointRequest';
import TicketRequest from './model/TicketRequest';
import TicketResponse from './model/TicketResponse';
import TicketStatusEnum from './model/TicketStatusEnum';
import TicketingAttachmentEndpointRequest from './model/TicketingAttachmentEndpointRequest';
import TicketingAttachmentResponse from './model/TicketingAttachmentResponse';
import User from './model/User';
import ValidationProblemSource from './model/ValidationProblemSource';
import WarningValidationProblem from './model/WarningValidationProblem';
import WebhookReceiver from './model/WebhookReceiver';
import WebhookReceiverRequest from './model/WebhookReceiverRequest';
import AccountDetailsApi from './api/AccountDetailsApi';
import AccountTokenApi from './api/AccountTokenApi';
import AccountsApi from './api/AccountsApi';
import AttachmentsApi from './api/AttachmentsApi';
import AvailableActionsApi from './api/AvailableActionsApi';
import CommentsApi from './api/CommentsApi';
import ContactsApi from './api/ContactsApi';
import DeleteAccountApi from './api/DeleteAccountApi';
import ForceResyncApi from './api/ForceResyncApi';
import GenerateKeyApi from './api/GenerateKeyApi';
import IssuesApi from './api/IssuesApi';
import LinkTokenApi from './api/LinkTokenApi';
import LinkedAccountsApi from './api/LinkedAccountsApi';
import PassthroughApi from './api/PassthroughApi';
import ProjectsApi from './api/ProjectsApi';
import RegenerateKeyApi from './api/RegenerateKeyApi';
import SyncStatusApi from './api/SyncStatusApi';
import TagsApi from './api/TagsApi';
import TeamsApi from './api/TeamsApi';
import TicketsApi from './api/TicketsApi';
import UsersApi from './api/UsersApi';
import WebhookReceiversApi from './api/WebhookReceiversApi';


/**
* The_unified_API_for_building_rich_integrations_with_multiple_Ticketing_platforms_.<br>
* The <code>index</code> module provides access to constructors for all the classes which comprise the public API.
* <p>
* An AMD (recommended!) or CommonJS application will generally do something equivalent to the following:
* <pre>
* var MergeTicketingApi = require('index'); // See note below*.
* var xxxSvc = new MergeTicketingApi.XxxApi(); // Allocate the API class we're going to use.
* var yyyModel = new MergeTicketingApi.Yyy(); // Construct a model instance.
* yyyModel.someProperty = 'someValue';
* ...
* var zzz = xxxSvc.doSomething(yyyModel); // Invoke the service.
* ...
* </pre>
* <em>*NOTE: For a top-level AMD script, use require(['index'], function(){...})
* and put the application logic within the callback function.</em>
* </p>
* <p>
* A non-AMD browser application (discouraged) might do something like this:
* <pre>
* var xxxSvc = new MergeTicketingApi.XxxApi(); // Allocate the API class we're going to use.
* var yyy = new MergeTicketingApi.Yyy(); // Construct a model instance.
* yyyModel.someProperty = 'someValue';
* ...
* var zzz = xxxSvc.doSomething(yyyModel); // Invoke the service.
* ...
* </pre>
* </p>
* @module index
* @version 1.0
*/
export {
    /**
     * The ApiClient constructor.
     * @property {module:ApiClient}
     */
    ApiClient,

    /**
     * The Account model constructor.
     * @property {module:model/Account}
     */
    Account,

    /**
     * The AccountDetails model constructor.
     * @property {module:model/AccountDetails}
     */
    AccountDetails,

    /**
     * The AccountDetailsAndActions model constructor.
     * @property {module:model/AccountDetailsAndActions}
     */
    AccountDetailsAndActions,

    /**
     * The AccountDetailsAndActionsIntegration model constructor.
     * @property {module:model/AccountDetailsAndActionsIntegration}
     */
    AccountDetailsAndActionsIntegration,

    /**
     * The AccountDetailsAndActionsStatusEnum model constructor.
     * @property {module:model/AccountDetailsAndActionsStatusEnum}
     */
    AccountDetailsAndActionsStatusEnum,

    /**
     * The AccountIntegration model constructor.
     * @property {module:model/AccountIntegration}
     */
    AccountIntegration,

    /**
     * The AccountToken model constructor.
     * @property {module:model/AccountToken}
     */
    AccountToken,

    /**
     * The Attachment model constructor.
     * @property {module:model/Attachment}
     */
    Attachment,

    /**
     * The AttachmentRequest model constructor.
     * @property {module:model/AttachmentRequest}
     */
    AttachmentRequest,

    /**
     * The AvailableActions model constructor.
     * @property {module:model/AvailableActions}
     */
    AvailableActions,

    /**
     * The CategoriesEnum model constructor.
     * @property {module:model/CategoriesEnum}
     */
    CategoriesEnum,

    /**
     * The CategoryEnum model constructor.
     * @property {module:model/CategoryEnum}
     */
    CategoryEnum,

    /**
     * The Comment model constructor.
     * @property {module:model/Comment}
     */
    Comment,

    /**
     * The CommentEndpointRequest model constructor.
     * @property {module:model/CommentEndpointRequest}
     */
    CommentEndpointRequest,

    /**
     * The CommentRequest model constructor.
     * @property {module:model/CommentRequest}
     */
    CommentRequest,

    /**
     * The CommentResponse model constructor.
     * @property {module:model/CommentResponse}
     */
    CommentResponse,

    /**
     * The Contact model constructor.
     * @property {module:model/Contact}
     */
    Contact,

    /**
     * The DataPassthroughRequest model constructor.
     * @property {module:model/DataPassthroughRequest}
     */
    DataPassthroughRequest,

    /**
     * The DebugModeLog model constructor.
     * @property {module:model/DebugModeLog}
     */
    DebugModeLog,

    /**
     * The DebugModelLogSummary model constructor.
     * @property {module:model/DebugModelLogSummary}
     */
    DebugModelLogSummary,

    /**
     * The EncodingEnum model constructor.
     * @property {module:model/EncodingEnum}
     */
    EncodingEnum,

    /**
     * The EndUserDetailsRequest model constructor.
     * @property {module:model/EndUserDetailsRequest}
     */
    EndUserDetailsRequest,

    /**
     * The ErrorValidationProblem model constructor.
     * @property {module:model/ErrorValidationProblem}
     */
    ErrorValidationProblem,

    /**
     * The GenerateRemoteKeyRequest model constructor.
     * @property {module:model/GenerateRemoteKeyRequest}
     */
    GenerateRemoteKeyRequest,

    /**
     * The Issue model constructor.
     * @property {module:model/Issue}
     */
    Issue,

    /**
     * The IssueStatusEnum model constructor.
     * @property {module:model/IssueStatusEnum}
     */
    IssueStatusEnum,

    /**
     * The LinkToken model constructor.
     * @property {module:model/LinkToken}
     */
    LinkToken,

    /**
     * The LinkedAccountStatus model constructor.
     * @property {module:model/LinkedAccountStatus}
     */
    LinkedAccountStatus,

    /**
     * The MetaResponse model constructor.
     * @property {module:model/MetaResponse}
     */
    MetaResponse,

    /**
     * The MethodEnum model constructor.
     * @property {module:model/MethodEnum}
     */
    MethodEnum,

    /**
     * The ModelOperation model constructor.
     * @property {module:model/ModelOperation}
     */
    ModelOperation,

    /**
     * The MultipartFormFieldRequest model constructor.
     * @property {module:model/MultipartFormFieldRequest}
     */
    MultipartFormFieldRequest,

    /**
     * The PaginatedAccountDetailsAndActionsList model constructor.
     * @property {module:model/PaginatedAccountDetailsAndActionsList}
     */
    PaginatedAccountDetailsAndActionsList,

    /**
     * The PaginatedAccountList model constructor.
     * @property {module:model/PaginatedAccountList}
     */
    PaginatedAccountList,

    /**
     * The PaginatedAttachmentList model constructor.
     * @property {module:model/PaginatedAttachmentList}
     */
    PaginatedAttachmentList,

    /**
     * The PaginatedCommentList model constructor.
     * @property {module:model/PaginatedCommentList}
     */
    PaginatedCommentList,

    /**
     * The PaginatedContactList model constructor.
     * @property {module:model/PaginatedContactList}
     */
    PaginatedContactList,

    /**
     * The PaginatedIssueList model constructor.
     * @property {module:model/PaginatedIssueList}
     */
    PaginatedIssueList,

    /**
     * The PaginatedProjectList model constructor.
     * @property {module:model/PaginatedProjectList}
     */
    PaginatedProjectList,

    /**
     * The PaginatedSyncStatusList model constructor.
     * @property {module:model/PaginatedSyncStatusList}
     */
    PaginatedSyncStatusList,

    /**
     * The PaginatedTagList model constructor.
     * @property {module:model/PaginatedTagList}
     */
    PaginatedTagList,

    /**
     * The PaginatedTeamList model constructor.
     * @property {module:model/PaginatedTeamList}
     */
    PaginatedTeamList,

    /**
     * The PaginatedTicketList model constructor.
     * @property {module:model/PaginatedTicketList}
     */
    PaginatedTicketList,

    /**
     * The PaginatedUserList model constructor.
     * @property {module:model/PaginatedUserList}
     */
    PaginatedUserList,

    /**
     * The Project model constructor.
     * @property {module:model/Project}
     */
    Project,

    /**
     * The RemoteData model constructor.
     * @property {module:model/RemoteData}
     */
    RemoteData,

    /**
     * The RemoteKey model constructor.
     * @property {module:model/RemoteKey}
     */
    RemoteKey,

    /**
     * The RemoteKeyForRegenerationRequest model constructor.
     * @property {module:model/RemoteKeyForRegenerationRequest}
     */
    RemoteKeyForRegenerationRequest,

    /**
     * The RemoteResponse model constructor.
     * @property {module:model/RemoteResponse}
     */
    RemoteResponse,

    /**
     * The RequestFormatEnum model constructor.
     * @property {module:model/RequestFormatEnum}
     */
    RequestFormatEnum,

    /**
     * The SyncStatus model constructor.
     * @property {module:model/SyncStatus}
     */
    SyncStatus,

    /**
     * The SyncStatusStatusEnum model constructor.
     * @property {module:model/SyncStatusStatusEnum}
     */
    SyncStatusStatusEnum,

    /**
     * The Tag model constructor.
     * @property {module:model/Tag}
     */
    Tag,

    /**
     * The Team model constructor.
     * @property {module:model/Team}
     */
    Team,

    /**
     * The Ticket model constructor.
     * @property {module:model/Ticket}
     */
    Ticket,

    /**
     * The TicketEndpointRequest model constructor.
     * @property {module:model/TicketEndpointRequest}
     */
    TicketEndpointRequest,

    /**
     * The TicketRequest model constructor.
     * @property {module:model/TicketRequest}
     */
    TicketRequest,

    /**
     * The TicketResponse model constructor.
     * @property {module:model/TicketResponse}
     */
    TicketResponse,

    /**
     * The TicketStatusEnum model constructor.
     * @property {module:model/TicketStatusEnum}
     */
    TicketStatusEnum,

    /**
     * The TicketingAttachmentEndpointRequest model constructor.
     * @property {module:model/TicketingAttachmentEndpointRequest}
     */
    TicketingAttachmentEndpointRequest,

    /**
     * The TicketingAttachmentResponse model constructor.
     * @property {module:model/TicketingAttachmentResponse}
     */
    TicketingAttachmentResponse,

    /**
     * The User model constructor.
     * @property {module:model/User}
     */
    User,

    /**
     * The ValidationProblemSource model constructor.
     * @property {module:model/ValidationProblemSource}
     */
    ValidationProblemSource,

    /**
     * The WarningValidationProblem model constructor.
     * @property {module:model/WarningValidationProblem}
     */
    WarningValidationProblem,

    /**
     * The WebhookReceiver model constructor.
     * @property {module:model/WebhookReceiver}
     */
    WebhookReceiver,

    /**
     * The WebhookReceiverRequest model constructor.
     * @property {module:model/WebhookReceiverRequest}
     */
    WebhookReceiverRequest,

    /**
    * The AccountDetailsApi service constructor.
    * @property {module:api/AccountDetailsApi}
    */
    AccountDetailsApi,

    /**
    * The AccountTokenApi service constructor.
    * @property {module:api/AccountTokenApi}
    */
    AccountTokenApi,

    /**
    * The AccountsApi service constructor.
    * @property {module:api/AccountsApi}
    */
    AccountsApi,

    /**
    * The AttachmentsApi service constructor.
    * @property {module:api/AttachmentsApi}
    */
    AttachmentsApi,

    /**
    * The AvailableActionsApi service constructor.
    * @property {module:api/AvailableActionsApi}
    */
    AvailableActionsApi,

    /**
    * The CommentsApi service constructor.
    * @property {module:api/CommentsApi}
    */
    CommentsApi,

    /**
    * The ContactsApi service constructor.
    * @property {module:api/ContactsApi}
    */
    ContactsApi,

    /**
    * The DeleteAccountApi service constructor.
    * @property {module:api/DeleteAccountApi}
    */
    DeleteAccountApi,

    /**
    * The ForceResyncApi service constructor.
    * @property {module:api/ForceResyncApi}
    */
    ForceResyncApi,

    /**
    * The GenerateKeyApi service constructor.
    * @property {module:api/GenerateKeyApi}
    */
    GenerateKeyApi,

    /**
    * The IssuesApi service constructor.
    * @property {module:api/IssuesApi}
    */
    IssuesApi,

    /**
    * The LinkTokenApi service constructor.
    * @property {module:api/LinkTokenApi}
    */
    LinkTokenApi,

    /**
    * The LinkedAccountsApi service constructor.
    * @property {module:api/LinkedAccountsApi}
    */
    LinkedAccountsApi,

    /**
    * The PassthroughApi service constructor.
    * @property {module:api/PassthroughApi}
    */
    PassthroughApi,

    /**
    * The ProjectsApi service constructor.
    * @property {module:api/ProjectsApi}
    */
    ProjectsApi,

    /**
    * The RegenerateKeyApi service constructor.
    * @property {module:api/RegenerateKeyApi}
    */
    RegenerateKeyApi,

    /**
    * The SyncStatusApi service constructor.
    * @property {module:api/SyncStatusApi}
    */
    SyncStatusApi,

    /**
    * The TagsApi service constructor.
    * @property {module:api/TagsApi}
    */
    TagsApi,

    /**
    * The TeamsApi service constructor.
    * @property {module:api/TeamsApi}
    */
    TeamsApi,

    /**
    * The TicketsApi service constructor.
    * @property {module:api/TicketsApi}
    */
    TicketsApi,

    /**
    * The UsersApi service constructor.
    * @property {module:api/UsersApi}
    */
    UsersApi,

    /**
    * The WebhookReceiversApi service constructor.
    * @property {module:api/WebhookReceiversApi}
    */
    WebhookReceiversApi
};
