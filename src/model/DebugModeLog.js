/**
 * Merge Ticketing API
 * The unified API for building rich integrations with multiple Ticketing platforms.
 *
 * The version of the OpenAPI document: 1.0
 * Contact: hello@merge.dev
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import DebugModelLogSummary from './DebugModelLogSummary';

/**
 * The DebugModeLog model module.
 * @module model/DebugModeLog
 * @version 1.0
 */
class DebugModeLog {
    /**
     * Constructs a new <code>DebugModeLog</code>.
     * @alias module:model/DebugModeLog
     * @param log_id {String} 
     * @param dashboard_view {String} 
     * @param log_summary {module:model/DebugModelLogSummary} 
     */
    constructor(log_id, dashboard_view, log_summary) { 
        
        DebugModeLog.initialize(this, log_id, dashboard_view, log_summary);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, log_id, dashboard_view, log_summary) { 
        obj['log_id'] = log_id;
        obj['dashboard_view'] = dashboard_view;
        obj['log_summary'] = log_summary;
    }

    /**
     * Constructs a <code>DebugModeLog</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/DebugModeLog} obj Optional instance to populate.
     * @return {module:model/DebugModeLog} The populated <code>DebugModeLog</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new DebugModeLog();

            if (data.hasOwnProperty('log_id')) {
                obj['log_id'] = ApiClient.convertToType(data['log_id'], 'String');
            }
            if (data.hasOwnProperty('dashboard_view')) {
                obj['dashboard_view'] = ApiClient.convertToType(data['dashboard_view'], 'String');
            }
            if (data.hasOwnProperty('log_summary')) {
                obj['log_summary'] = DebugModelLogSummary.constructFromObject(data['log_summary']);
            }
        }
        return obj;
    }


}

/**
 * @member {String} log_id
 */
DebugModeLog.prototype['log_id'] = undefined;

/**
 * @member {String} dashboard_view
 */
DebugModeLog.prototype['dashboard_view'] = undefined;

/**
 * @member {module:model/DebugModelLogSummary} log_summary
 */
DebugModeLog.prototype['log_summary'] = undefined;






export default DebugModeLog;

