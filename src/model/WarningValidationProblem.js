/**
 * Merge Ticketing API
 * The unified API for building rich integrations with multiple Ticketing platforms.
 *
 * The version of the OpenAPI document: 1.0
 * Contact: hello@merge.dev
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import ValidationProblemSource from './ValidationProblemSource';

/**
 * The WarningValidationProblem model module.
 * @module model/WarningValidationProblem
 * @version 1.0
 */
class WarningValidationProblem {
    /**
     * Constructs a new <code>WarningValidationProblem</code>.
     * @alias module:model/WarningValidationProblem
     * @param title {String} 
     * @param detail {String} 
     * @param problem_type {String} 
     */
    constructor(title, detail, problem_type) { 
        
        WarningValidationProblem.initialize(this, title, detail, problem_type);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, title, detail, problem_type) { 
        obj['title'] = title;
        obj['detail'] = detail;
        obj['problem_type'] = problem_type;
    }

    /**
     * Constructs a <code>WarningValidationProblem</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/WarningValidationProblem} obj Optional instance to populate.
     * @return {module:model/WarningValidationProblem} The populated <code>WarningValidationProblem</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new WarningValidationProblem();

            if (data.hasOwnProperty('source')) {
                obj['source'] = ValidationProblemSource.constructFromObject(data['source']);
            }
            if (data.hasOwnProperty('title')) {
                obj['title'] = ApiClient.convertToType(data['title'], 'String');
            }
            if (data.hasOwnProperty('detail')) {
                obj['detail'] = ApiClient.convertToType(data['detail'], 'String');
            }
            if (data.hasOwnProperty('problem_type')) {
                obj['problem_type'] = ApiClient.convertToType(data['problem_type'], 'String');
            }
        }
        return obj;
    }


}

/**
 * @member {module:model/ValidationProblemSource} source
 */
WarningValidationProblem.prototype['source'] = undefined;

/**
 * @member {String} title
 */
WarningValidationProblem.prototype['title'] = undefined;

/**
 * @member {String} detail
 */
WarningValidationProblem.prototype['detail'] = undefined;

/**
 * @member {String} problem_type
 */
WarningValidationProblem.prototype['problem_type'] = undefined;






export default WarningValidationProblem;

