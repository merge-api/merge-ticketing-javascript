/**
 * Merge Ticketing API
 * The unified API for building rich integrations with multiple Ticketing platforms.
 *
 * The version of the OpenAPI document: 1.0
 * Contact: hello@merge.dev
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The ValidationProblemSource model module.
 * @module model/ValidationProblemSource
 * @version 1.0
 */
class ValidationProblemSource {
    /**
     * Constructs a new <code>ValidationProblemSource</code>.
     * @alias module:model/ValidationProblemSource
     * @param pointer {String} 
     */
    constructor(pointer) { 
        
        ValidationProblemSource.initialize(this, pointer);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, pointer) { 
        obj['pointer'] = pointer;
    }

    /**
     * Constructs a <code>ValidationProblemSource</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/ValidationProblemSource} obj Optional instance to populate.
     * @return {module:model/ValidationProblemSource} The populated <code>ValidationProblemSource</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new ValidationProblemSource();

            if (data.hasOwnProperty('pointer')) {
                obj['pointer'] = ApiClient.convertToType(data['pointer'], 'String');
            }
        }
        return obj;
    }


}

/**
 * @member {String} pointer
 */
ValidationProblemSource.prototype['pointer'] = undefined;






export default ValidationProblemSource;

